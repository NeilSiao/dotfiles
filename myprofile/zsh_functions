function kuexe
{
    kubectl exec -it "$1" bash;
}

function kuexeg
{
    kuexe $(kugp | grep $1 | awk '{print $1}')
}

function artisanseed
{
    php artisan db:seed --class="$1"
}

works() { cd $HOME/work/$1; }
compctl -W $HOME/work/ -f works

# branch control
function new_ticket
{
    if [[ -z "$1" ]] ;then
        echo "new_ticket: No ticket number specified!";
        echo "usage: new_ticket [TICKET_NUM] [checkout]";
    else
        echo "git push origin master:$1";
        git push origin master:$1;
        if [[ -z "$2" ]] ;then
            git checkout $1;
        fi
    fi
}

function rm_ticket
{
    if [[ -z "$1" ]] ;then
        ticket=$(tmux display-message -p '#S');
        echo "rm_ticket: No ticket number specified!";
        echo "use current tmux session name $ticket";
    else
        ticket=$1;
    fi
    echo "git push origin :ticket$ticket";
    git push origin :ticket$ticket;
    echo "git branch -d $ticket";
    git branch -d $ticket;
}

function seedclass
{
    php artisan db:seed --class=$1
}

function cht
{
     curl cht.sh/$1;
}

function runimage
{
    docker run -i -p $2 -t $1;
}

function gcotarget
{
    gco $(tmux display-message -p '#W');
}

function to_date()
{
    if [[ -z "$1" ]] ;then
        echo "No unixtime specified!";
    else
        date -jf '%s' "$1" +"%Y-%m-%d %H:%M:%S"
    fi
}

function to_unix()
{
    date -jf '%Y%m%d%H%M%S' "$1" +%s;
}

function rmswp()
{
    cd ~/.local/share/nvim/swap & rm *.swp;
}

function killevidpod()
{
    kubectl get pods --field-selector=status.phase=Failed | awk '{ if(NR>1)print $1}' | xargs kubectl delete pods
}

 function mountAP()
 {
     mount_smbfs //neil.hsiao@172.19.1.21/linuxap/linuxap0$1 /Users/neil.hsiao/gitRepo/104/apVolumn/linuxap0$1
 }

 function timezsh() {
     for i in $(seq 1 3); do /usr/bin/time ${1-$SHELL} -i -c exit; done
 }
source $ZSH_CUSTOM/functions/develop_flows
source $ZSH_CUSTOM/functions/docker
